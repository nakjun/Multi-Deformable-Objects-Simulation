#version 430

// Target 0 : Vertex position
layout(std430, binding = 0) buffer Pos {
   vec4 Positions[];
};

//Target 4 :Particle Force
layout(std430, binding =3)  buffer NodeForce{
	vec4 Node_Force[];
};

layout(std430, binding =8)  buffer ObjectInformation{
	vec4 O_Infor[];
};

layout (local_size_x = 512) in;

uniform int VertexCount;
uniform int ObjectCount;

int NodeForceLength = 30;

void main() {

	uint index = gl_GlobalInvocationID.x;

	if(index>=VertexCount) return;

	int obj = int(Positions[index].w);
		
	vec4 OBJInformation = O_Infor[int(obj)];
	int offset = int(OBJInformation.w);
	int next = int(OBJInformation.y);

	vec3 Force = vec3(0.0);

	for(int i=0;i<NodeForceLength-1;i++)
	{		
		Force += Node_Force[index * NodeForceLength + i].xyz;
	}
		
	Node_Force[index * NodeForceLength + NodeForceLength].xyz = Force;
}

